{"ast":null,"code":"const outputGameId = document.getElementById('outputGameId');\nconst outputPlayerXId = document.getElementById('outputPlayerXId'); // Cambiado\nconst outputPlayerOId = document.getElementById('outputPlayerOId'); // Nuevo\nconst outputBoard = document.getElementById('outputBoard');\nconst outputWinner = document.getElementById('outputWinner');\nconst outputError = document.getElementById('outputError');\nlet gameId;\nlet playerId;\nlet board;\nlet winner;\nexport function getGameId() {\n  return gameId;\n}\nexport function getBoard() {\n  return board;\n}\nexport function getWinner() {\n  return winner;\n}\nexport async function createGame() {\n  return fetch(`http://localhost:8080/create`).then(response => response.json()).then(data => {\n    gameId = data.idPartida;\n    playerId = data.idPlayerX;\n    board = data.board;\n    winner = data.ganador;\n    outputGameId.textContent = `Game ID: ${gameId}`;\n    outputPlayerXId.textContent = `Player X ID: ${playerId}`; // Actualizado\n    outputBoard.textContent = `Board: ${JSON.stringify(board)}`;\n    outputWinner.textContent = `Winner: ${winner}`;\n  }).catch(error => {\n    outputError.textContent = `Error: ${error}`;\n  });\n}\nexport async function joinGame() {\n  //gameId = document.getElementById(\"gameId\").value;\n  return fetch(`http://localhost:8080/join/${gameId}`).then(response => response.json()).then(data => {\n    gameId = data.idPartida;\n    playerId = data.idPlayerO;\n    board = data.board;\n    winner = data.ganador;\n    outputGameId.textContent = `Game ID: ${gameId}`;\n    outputPlayerOId.textContent = `Player O ID: ${playerId}`; // Nuevo\n    outputBoard.textContent = `Board: ${JSON.stringify(board)}`;\n    outputWinner.textContent = `Winner: ${winner}`;\n  }).catch(error => {\n    outputError.textContent = `Error: ${error}`;\n  });\n}\nexport async function turno(casilla) {\n  console.log(playerId);\n  return fetch(`http://localhost:8080/turno/${gameId}`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      casilla,\n      idJugador: playerId\n    })\n  }).then(response => response.json()).then(data => {\n    board = data.board;\n    winner = data.ganador;\n    outputBoard.textContent = `Board: ${JSON.stringify(board)}`;\n    outputWinner.textContent = `Winner: ${winner}`;\n  }).catch(error => {\n    outputError.textContent = `Error: ${error}`;\n  });\n}\nexport async function turnoO(casilla) {\n  console.log(otherPlayerId);\n  return fetch(`http://localhost:8080/turno/${gameId}`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      casilla,\n      idJugador: otherPlayerId\n    })\n  }).then(response => response.json()).then(data => {\n    board = data.board;\n    winner = data.ganador;\n    outputBoard.textContent = `Board: ${JSON.stringify(board)}`;\n    outputWinner.textContent = `Winner: ${winner}`;\n  }).catch(error => {\n    outputError.textContent = `Error: ${error}`;\n  });\n}\nexport async function reloadBoard() {\n  console.log(gameId);\n  return fetch(`http://localhost:8080/actualizar/${gameId}`).then(response => response.json()).then(data => {\n    board = data.board;\n    console.log(board);\n    winner = data.ganador;\n    console.log(winner);\n  }).catch(error => console.error(\"Error:\", error));\n}","map":{"version":3,"names":["outputGameId","document","getElementById","outputPlayerXId","outputPlayerOId","outputBoard","outputWinner","outputError","gameId","playerId","board","winner","getGameId","getBoard","getWinner","createGame","fetch","then","response","json","data","idPartida","idPlayerX","ganador","textContent","JSON","stringify","catch","error","joinGame","idPlayerO","turno","casilla","console","log","method","headers","body","idJugador","turnoO","otherPlayerId","reloadBoard"],"sources":["C:/Users/purru/OneDrive - Universidad Pontificia Comillas/Documentos/3_Tercero/PAT/Repositorios/practica4/Ejercicio Tres en React-ayas/src/Api.js"],"sourcesContent":["const outputGameId = document.getElementById('outputGameId');\r\nconst outputPlayerXId = document.getElementById('outputPlayerXId'); // Cambiado\r\nconst outputPlayerOId = document.getElementById('outputPlayerOId'); // Nuevo\r\nconst outputBoard = document.getElementById('outputBoard');\r\nconst outputWinner = document.getElementById('outputWinner');\r\nconst outputError = document.getElementById('outputError');\r\n\r\nlet gameId;\r\nlet playerId;\r\nlet board;\r\nlet winner;\r\n\r\nexport function getGameId(){\r\n    return gameId;\r\n}\r\n\r\nexport function getBoard(){\r\n    return board;\r\n}\r\n\r\nexport function getWinner(){\r\n    return winner;\r\n}\r\n\r\nexport async function createGame(){\r\n    return fetch(`http://localhost:8080/create`)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n        gameId = data.idPartida;\r\n        playerId = data.idPlayerX;\r\n        board = data.board;\r\n        winner = data.ganador;\r\n\r\n        outputGameId.textContent = `Game ID: ${gameId}`;\r\n        outputPlayerXId.textContent = `Player X ID: ${playerId}`; // Actualizado\r\n        outputBoard.textContent = `Board: ${JSON.stringify(board)}`;\r\n        outputWinner.textContent = `Winner: ${winner}`;\r\n    })\r\n    .catch(error => {\r\n        outputError.textContent = `Error: ${error}`;\r\n    });\r\n}\r\n\r\nexport async function joinGame(){\r\n    //gameId = document.getElementById(\"gameId\").value;\r\n    return fetch(`http://localhost:8080/join/${gameId}`)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n        gameId = data.idPartida;\r\n        playerId = data.idPlayerO;\r\n        board = data.board;\r\n        winner = data.ganador;\r\n\r\n        outputGameId.textContent = `Game ID: ${gameId}`;\r\n        outputPlayerOId.textContent = `Player O ID: ${playerId}`; // Nuevo\r\n        outputBoard.textContent = `Board: ${JSON.stringify(board)}`;\r\n        outputWinner.textContent = `Winner: ${winner}`;\r\n    })\r\n    .catch(error => {\r\n        outputError.textContent = `Error: ${error}`;\r\n    });\r\n}\r\n\r\nexport async function turno(casilla) {\r\n    console.log(playerId);\r\n    return fetch(`http://localhost:8080/turno/${gameId}`, \r\n        {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({ casilla, idJugador: playerId })\r\n        })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n        board = data.board;\r\n        winner = data.ganador;\r\n\r\n        outputBoard.textContent = `Board: ${JSON.stringify(board)}`;\r\n        outputWinner.textContent = `Winner: ${winner}`;\r\n    })\r\n    .catch(error => {\r\n        outputError.textContent = `Error: ${error}`;\r\n    });\r\n}\r\n\r\nexport async function turnoO(casilla) {\r\n    console.log(otherPlayerId);\r\n    return fetch(`http://localhost:8080/turno/${gameId}`, \r\n        {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({ casilla, idJugador: otherPlayerId })\r\n        })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n        board = data.board;\r\n        winner = data.ganador;\r\n\r\n        outputBoard.textContent = `Board: ${JSON.stringify(board)}`;\r\n        outputWinner.textContent = `Winner: ${winner}`;\r\n    })\r\n    .catch(error => {\r\n        outputError.textContent = `Error: ${error}`;\r\n    });\r\n}\r\n\r\nexport async function reloadBoard() {\r\n    console.log(gameId);\r\n    return fetch(`http://localhost:8080/actualizar/${gameId}`)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n        board = data.board;\r\n        console.log(board);\r\n        winner = data.ganador;\r\n        console.log(winner);\r\n    }).catch(error => console.error(\"Error:\", error));\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}