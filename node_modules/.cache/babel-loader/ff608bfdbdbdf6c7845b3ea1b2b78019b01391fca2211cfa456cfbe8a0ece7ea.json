{"ast":null,"code":"const newGameButton = document.getElementById(\"newGame\");\nlet gameId;\nlet player;\nlet board;\nnewGameButton.addEventListener(\"click\", () => createGame());\nexport function getGameId() {\n  return gameId;\n}\nexport function getBoard() {\n  return board;\n}\nexport async function createGame() {\n  fetch(`http://localhost:8080/create`).then(response => response.json()).then(data => {\n    gameId = data.gameId;\n    player = 'X';\n    board = data.board;\n  }).catch(error => {\n    console.error(\"Error:\", error);\n  });\n}\nexport function turno(casilla) {\n  fetch(`http://localhost:8080/turno/${gameId}`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      casilla,\n      player\n    })\n  }).then(response => response.json()).then(data => {\n    if (data.success) {\n      board = data.board;\n      return board;\n    } else {\n      console.error(\"Turno no válido:\", data.message);\n    }\n  }).catch(error => {\n    console.error(\"Error:\", error);\n  });\n}\nexport async function reloadBoard() {\n  fetch(`http://localhost:8080/actualizar/${gameId}`).then(response => response.json()).then(data => {\n    if (data.success) {\n      board = data.board;\n      return board;\n    }\n  }).catch(error => console.error(\"Error:\", error));\n}","map":{"version":3,"names":["newGameButton","document","getElementById","gameId","player","board","addEventListener","createGame","getGameId","getBoard","fetch","then","response","json","data","catch","error","console","turno","casilla","method","headers","body","JSON","stringify","success","message","reloadBoard"],"sources":["C:/Users/purru/OneDrive - Universidad Pontificia Comillas/Documentos/3_Tercero/PAT/Repositorios/practica4/Ejercicio Tres en React-ayas/src/Api.js"],"sourcesContent":["const newGameButton = document.getElementById(\"newGame\");\r\n\r\nlet gameId;\r\nlet player;\r\nlet board;\r\n\r\nnewGameButton.addEventListener(\"click\", () => createGame());\r\n\r\nexport function getGameId(){\r\n    return gameId;\r\n}\r\n\r\nexport function getBoard(){\r\n    return board;\r\n}\r\n\r\nexport async function createGame(){\r\n    fetch(`http://localhost:8080/create`)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n        gameId = data.gameId;\r\n        player = 'X';\r\n        board = data.board;\r\n    })\r\n    .catch(error => {\r\n        console.error(\"Error:\", error);\r\n    });\r\n}\r\n\r\nexport function turno(casilla) {\r\n    fetch(`http://localhost:8080/turno/${gameId}`, \r\n        {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({ casilla, player })\r\n        }\r\n    )\r\n    .then(response => response.json())\r\n    .then(data => {\r\n        if (data.success) {\r\n            board = data.board;\r\n            return board;\r\n        } else {\r\n            console.error(\"Turno no válido:\", data.message);\r\n        }\r\n    })\r\n    .catch(error => {\r\n        console.error(\"Error:\", error);\r\n    });\r\n}\r\n\r\nexport async function reloadBoard() {\r\n    fetch(`http://localhost:8080/actualizar/${gameId}`)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n        if (data.success) {\r\n            board = data.board;\r\n            return board;\r\n        }\r\n    }).catch(error => console.error(\"Error:\", error));\r\n}"],"mappings":"AAAA,MAAMA,aAAa,GAAGC,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC;AAExD,IAAIC,MAAM;AACV,IAAIC,MAAM;AACV,IAAIC,KAAK;AAETL,aAAa,CAACM,gBAAgB,CAAC,OAAO,EAAE,MAAMC,UAAU,CAAC,CAAC,CAAC;AAE3D,OAAO,SAASC,SAASA,CAAA,EAAE;EACvB,OAAOL,MAAM;AACjB;AAEA,OAAO,SAASM,QAAQA,CAAA,EAAE;EACtB,OAAOJ,KAAK;AAChB;AAEA,OAAO,eAAeE,UAAUA,CAAA,EAAE;EAC9BG,KAAK,CAAC,8BAA8B,CAAC,CACpCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;IACVX,MAAM,GAAGW,IAAI,CAACX,MAAM;IACpBC,MAAM,GAAG,GAAG;IACZC,KAAK,GAAGS,IAAI,CAACT,KAAK;EACtB,CAAC,CAAC,CACDU,KAAK,CAACC,KAAK,IAAI;IACZC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;EAClC,CAAC,CAAC;AACN;AAEA,OAAO,SAASE,KAAKA,CAACC,OAAO,EAAE;EAC3BT,KAAK,CAAC,+BAA+BP,MAAM,EAAE,EACzC;IACIiB,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEL,OAAO;MAAEf;IAAO,CAAC;EAC5C,CACJ,CAAC,CACAO,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;IACV,IAAIA,IAAI,CAACW,OAAO,EAAE;MACdpB,KAAK,GAAGS,IAAI,CAACT,KAAK;MAClB,OAAOA,KAAK;IAChB,CAAC,MAAM;MACHY,OAAO,CAACD,KAAK,CAAC,kBAAkB,EAAEF,IAAI,CAACY,OAAO,CAAC;IACnD;EACJ,CAAC,CAAC,CACDX,KAAK,CAACC,KAAK,IAAI;IACZC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;EAClC,CAAC,CAAC;AACN;AAEA,OAAO,eAAeW,WAAWA,CAAA,EAAG;EAChCjB,KAAK,CAAC,oCAAoCP,MAAM,EAAE,CAAC,CAClDQ,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;IACV,IAAIA,IAAI,CAACW,OAAO,EAAE;MACdpB,KAAK,GAAGS,IAAI,CAACT,KAAK;MAClB,OAAOA,KAAK;IAChB;EACJ,CAAC,CAAC,CAACU,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC,CAAC;AACrD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}