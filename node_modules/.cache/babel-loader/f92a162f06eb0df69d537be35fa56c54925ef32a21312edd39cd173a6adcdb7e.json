{"ast":null,"code":"const API_BASE_URL=\"http://192.168.1.41:8080\";const outputGameId=document.getElementById('outputGameId');const outputPlayerXId=document.getElementById('outputPlayerXId');// Cambiado\nconst outputPlayerOId=document.getElementById('outputPlayerOId');// Nuevo\nconst outputBoard=document.getElementById('outputBoard');const outputWinner=document.getElementById('outputWinner');const outputError=document.getElementById('outputError');let gameId;let playerId;let board;let winner;let inGame=false;export function getGameId(){return gameId;}export function getBoard(){return board;}export function getWinner(){return winner;}export function getInGame(){return inGame;}export async function createGame(){return fetch(`${API_BASE_URL}/create`,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({})}).then(response=>response.json()).then(data=>{gameId=data.idPartida;playerId=data.idPlayerX;board=data.board;winner=data.ganador||null;inGame=true;outputGameId.textContent=`Game ID: ${gameId}`;}).catch(error=>{console.error(`Error: ${error}`);});}export async function joinGame(){gameId=document.getElementById(\"gameId\").value;return fetch(`${API_BASE_URL}/join/${gameId}`).then(response=>response.json()).then(data=>{gameId=data.idPartida;playerId=data.idPlayerO;board=data.board;winner=data.ganador||null;inGame=true;outputGameId.textContent=`Game ID: ${gameId}`;}).catch(error=>{console.error(`Error: ${error}`);});}export async function turno(casilla){console.log(playerId);return fetch(`${API_BASE_URL}/turno/${gameId}`,{method:\"PUT\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({casilla,idJugador:playerId})}).then(async response=>{if(response.status===404){const errorText=await response.text();if(errorText===\"Partida terminada por el host\"){alert(errorText);gameId=null;playerId=null;board=Array(9).fill(null);winner=null;outputGameId.textContent=\"\";}throw new Error(errorText);}else{return response.json();}}).then(data=>{board=data.board;winner=data.ganador||null;}).catch(error=>{console.error(\"Error:\",error);});}export async function reloadBoard(){console.log(gameId);return fetch(`${API_BASE_URL}/actualizar/${gameId}`).then(async response=>{if(response.status===404){const errorText=await response.text();if(errorText===\"Partida terminada por el host\"){alert(errorText);gameId=null;playerId=null;board=Array(9).fill(null);winner=null;outputGameId.textContent=\"\";}throw new Error(errorText);}else{return response.json();}}).then(data=>{board=data.board;console.log(board);winner=data.ganador||null;console.log(winner);}).catch(error=>console.error(\"Error:\",error));}export async function leaveGame(){return fetch(`${API_BASE_URL}/delete/${gameId}/${playerId}`,{method:\"DELETE\"}).then(response=>response.json()).then(data=>{gameId=null;playerId=null;board=Array(9).fill(null);winner=null;inGame=false;outputGameId.textContent=\"\";}).catch(error=>{console.error(`Error: ${error}`);});}export async function resetGame(){return fetch(`${API_BASE_URL}/reset/${gameId}`,{method:\"PUT\"}).then(response=>response.json()).then(data=>{board=Array(9).fill(null);// Reiniciar el tablero\nwinner=null;}).catch(error=>{console.error(`Error: ${error}`);});}","map":{"version":3,"names":["API_BASE_URL","outputGameId","document","getElementById","outputPlayerXId","outputPlayerOId","outputBoard","outputWinner","outputError","gameId","playerId","board","winner","inGame","getGameId","getBoard","getWinner","getInGame","createGame","fetch","method","headers","body","JSON","stringify","then","response","json","data","idPartida","idPlayerX","ganador","textContent","catch","error","console","joinGame","value","idPlayerO","turno","casilla","log","idJugador","status","errorText","text","alert","Array","fill","Error","reloadBoard","leaveGame","resetGame"],"sources":["C:/Users/purru/OneDrive - Universidad Pontificia Comillas/Documentos/3_Tercero/PAT/Repositorios/practica4/Ejercicio Tres en React-ayas/src/Api.js"],"sourcesContent":["const API_BASE_URL = \"http://192.168.1.41:8080\";\r\n\r\nconst outputGameId = document.getElementById('outputGameId');\r\nconst outputPlayerXId = document.getElementById('outputPlayerXId'); // Cambiado\r\nconst outputPlayerOId = document.getElementById('outputPlayerOId'); // Nuevo\r\nconst outputBoard = document.getElementById('outputBoard');\r\nconst outputWinner = document.getElementById('outputWinner');\r\nconst outputError = document.getElementById('outputError');\r\n\r\nlet gameId;\r\nlet playerId;\r\nlet board;\r\nlet winner;\r\nlet inGame = false;\r\n\r\nexport function getGameId(){\r\n    return gameId;\r\n}\r\n\r\nexport function getBoard(){\r\n    return board;\r\n}\r\n\r\nexport function getWinner(){\r\n    return winner;\r\n}\r\n\r\nexport function getInGame(){\r\n    return inGame;\r\n}\r\n\r\nexport async function createGame(){\r\n    return fetch(`${API_BASE_URL}/create`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({}),\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n        gameId = data.idPartida;\r\n        playerId = data.idPlayerX;\r\n        board = data.board;\r\n        winner = data.ganador || null;\r\n        inGame = true;\r\n\r\n        outputGameId.textContent = `Game ID: ${gameId}`;\r\n    })\r\n    .catch(error => {\r\n        console.error(`Error: ${error}`);\r\n    });\r\n}\r\n\r\nexport async function joinGame() {\r\n    gameId = document.getElementById(\"gameId\").value;\r\n    return fetch(`${API_BASE_URL}/join/${gameId}`)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            gameId = data.idPartida;\r\n            playerId = data.idPlayerO;\r\n            board = data.board;\r\n            winner = data.ganador || null;\r\n            inGame = true;\r\n\r\n            outputGameId.textContent = `Game ID: ${gameId}`;\r\n        })\r\n        .catch(error => {\r\n            console.error(`Error: ${error}`);\r\n        });\r\n}\r\n\r\nexport async function turno(casilla) {\r\n    console.log(playerId);\r\n    return fetch(`${API_BASE_URL}/turno/${gameId}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({ casilla, idJugador: playerId }),\r\n    })\r\n    .then(async(response) => {\r\n        if (response.status === 404) {\r\n            const errorText = await response.text();\r\n            if (errorText === \"Partida terminada por el host\") {\r\n                alert(errorText);\r\n                gameId = null;\r\n                playerId = null;\r\n                board = Array(9).fill(null);\r\n                winner = null;\r\n\r\n                outputGameId.textContent = \"\";\r\n            }\r\n            throw new Error(errorText);\r\n        } else {\r\n            return response.json();\r\n        }\r\n    })\r\n    .then(data => {\r\n        board = data.board;\r\n        winner = data.ganador || null;\r\n    })\r\n    .catch(error => {\r\n        console.error(\"Error:\", error);\r\n    });\r\n}\r\n\r\nexport async function reloadBoard() {\r\n    console.log(gameId);\r\n    return fetch(`${API_BASE_URL}/actualizar/${gameId}`)\r\n    .then(async(response) => {\r\n        if (response.status === 404) {\r\n            const errorText = await response.text();\r\n            if (errorText === \"Partida terminada por el host\") {\r\n                alert(errorText);\r\n                gameId = null;\r\n                playerId = null;\r\n                board = Array(9).fill(null);\r\n                winner = null;\r\n\r\n                outputGameId.textContent = \"\";\r\n            }\r\n            throw new Error(errorText);\r\n        } else {\r\n            return response.json();\r\n        }\r\n    })\r\n    .then(data => {\r\n        board = data.board;\r\n        console.log(board);\r\n        winner = data.ganador || null;\r\n        console.log(winner);\r\n    })\r\n    .catch(error => console.error(\"Error:\", error));\r\n}\r\n\r\nexport async function leaveGame() {\r\n    return fetch(`${API_BASE_URL}/delete/${gameId}/${playerId}`, {\r\n        method: \"DELETE\",\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            gameId = null;\r\n            playerId = null;\r\n            board = Array(9).fill(null);\r\n            winner = null;\r\n            inGame = false;\r\n\r\n            outputGameId.textContent = \"\";\r\n        })\r\n        .catch(error => {\r\n            console.error(`Error: ${error}`);\r\n        });\r\n}\r\n\r\nexport async function resetGame() {\r\n    return fetch(`${API_BASE_URL}/reset/${gameId}`, {\r\n        method: \"PUT\",\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            board = Array(9).fill(null); // Reiniciar el tablero\r\n            winner = null;\r\n        })\r\n        .catch(error => {\r\n            console.error(`Error: ${error}`);\r\n        });\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}