{"ast":null,"code":"const API_BASE_URL=\"http://192.168.1.41:8080\";const outputGameId=document.getElementById('outputGameId');let gameId;let playerId;let board;let winner;let inGame=false;let xIsNext;export function getGameId(){return gameId;}export function getBoard(){return board;}export function getWinner(){return winner;}export function getInGame(){return inGame;}export function getXIsNext(){return xIsNext;}export function setXIsNext(value){xIsNext=value;}export async function createGame(){return fetch(`${API_BASE_URL}/create`,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({})}).then(response=>response.json()).then(data=>{gameId=data.idPartida;playerId=data.idPlayerX;board=data.board;winner=data.ganador||null;inGame=true;xIsNext=true;outputGameId.textContent=`Game ID: ${gameId}`;}).catch(error=>{console.error(`Error: ${error}`);});}export async function joinGame(){gameId=document.getElementById(\"gameId\").value;return fetch(`${API_BASE_URL}/join/${gameId}`).then(response=>response.json()).then(data=>{gameId=data.idPartida;playerId=data.idPlayerO;board=data.board;winner=data.ganador||null;inGame=true;outputGameId.textContent=`Game ID: ${gameId}`;}).catch(error=>{console.error(`Error: ${error}`);});}export async function turno(casilla){console.log(playerId);return fetch(`${API_BASE_URL}/turno/${gameId}`,{method:\"PUT\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({casilla,idJugador:playerId})}).then(async response=>{if(response.status===404){const errorText=await response.text();if(errorText===\"Partida terminada por el host\"){alert(errorText);gameId=null;playerId=null;board=Array(9).fill(null);winner=null;outputGameId.textContent=\"\";}throw new Error(errorText);}else{return response.json();}}).then(data=>{board=data.board;winner=data.ganador||null;xIsNext=!xIsNext;}).catch(error=>{console.error(\"Error:\",error);});}export async function reloadBoard(){console.log(gameId);return fetch(`${API_BASE_URL}/actualizar/${gameId}`).then(async response=>{if(response.status===404){const errorText=await response.text();if(errorText===\"Partida terminada por el host\"){alert(errorText);gameId=null;playerId=null;board=Array(9).fill(null);winner=null;outputGameId.textContent=\"\";}throw new Error(errorText);}else{return response.json();}}).then(data=>{board=data.board;winner=data.ganador||null;}).catch(error=>console.error(\"Error:\",error));}export async function leaveGame(){return fetch(`${API_BASE_URL}/delete/${gameId}/${playerId}`,{method:\"DELETE\"}).then(response=>response.json()).then(data=>{gameId=null;playerId=null;board=Array(9).fill(null);winner=null;inGame=false;outputGameId.textContent=\"\";}).catch(error=>{console.error(`Error: ${error}`);});}export async function resetGame(){return fetch(`${API_BASE_URL}/reset/${gameId}`,{method:\"PUT\"}).then(response=>response.json()).then(data=>{board=Array(9).fill(null);// Reiniciar el tablero\nwinner=null;}).catch(error=>{console.error(`Error: ${error}`);});}","map":{"version":3,"names":["API_BASE_URL","outputGameId","document","getElementById","gameId","playerId","board","winner","inGame","xIsNext","getGameId","getBoard","getWinner","getInGame","getXIsNext","setXIsNext","value","createGame","fetch","method","headers","body","JSON","stringify","then","response","json","data","idPartida","idPlayerX","ganador","textContent","catch","error","console","joinGame","idPlayerO","turno","casilla","log","idJugador","status","errorText","text","alert","Array","fill","Error","reloadBoard","leaveGame","resetGame"],"sources":["C:/Users/purru/OneDrive - Universidad Pontificia Comillas/Documentos/3_Tercero/PAT/Repositorios/practica4/Ejercicio Tres en React-ayas/src/Api.js"],"sourcesContent":["const API_BASE_URL = \"http://192.168.1.41:8080\";\r\n\r\nconst outputGameId = document.getElementById('outputGameId');\r\n\r\nlet gameId;\r\nlet playerId;\r\nlet board;\r\nlet winner;\r\nlet inGame = false;\r\nlet xIsNext;\r\n\r\nexport function getGameId(){\r\n    return gameId;\r\n}\r\n\r\nexport function getBoard(){\r\n    return board;\r\n}\r\n\r\nexport function getWinner(){\r\n    return winner;\r\n}\r\n\r\nexport function getInGame(){\r\n    return inGame;\r\n}\r\n\r\nexport function getXIsNext(){\r\n    return xIsNext;\r\n}\r\n\r\nexport function setXIsNext(value){\r\n    xIsNext = value;\r\n}\r\n\r\nexport async function createGame(){\r\n    return fetch(`${API_BASE_URL}/create`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({}),\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n        gameId = data.idPartida;\r\n        playerId = data.idPlayerX;\r\n        board = data.board;\r\n        winner = data.ganador || null;\r\n        inGame = true;\r\n        xIsNext = true;\r\n\r\n        outputGameId.textContent = `Game ID: ${gameId}`;\r\n    })\r\n    .catch(error => {\r\n        console.error(`Error: ${error}`);\r\n    });\r\n}\r\n\r\nexport async function joinGame() {\r\n    gameId = document.getElementById(\"gameId\").value;\r\n    return fetch(`${API_BASE_URL}/join/${gameId}`)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            gameId = data.idPartida;\r\n            playerId = data.idPlayerO;\r\n            board = data.board;\r\n            winner = data.ganador || null;\r\n            inGame = true;\r\n\r\n            outputGameId.textContent = `Game ID: ${gameId}`;\r\n        })\r\n        .catch(error => {\r\n            console.error(`Error: ${error}`);\r\n        });\r\n}\r\n\r\nexport async function turno(casilla) {\r\n    console.log(playerId);\r\n    return fetch(`${API_BASE_URL}/turno/${gameId}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({ casilla, idJugador: playerId }),\r\n    })\r\n    .then(async(response) => {\r\n        if (response.status === 404) {\r\n            const errorText = await response.text();\r\n            if (errorText === \"Partida terminada por el host\") {\r\n                alert(errorText);\r\n                gameId = null;\r\n                playerId = null;\r\n                board = Array(9).fill(null);\r\n                winner = null;\r\n\r\n                outputGameId.textContent = \"\";\r\n            }\r\n            throw new Error(errorText);\r\n        } else {\r\n            return response.json();\r\n        }\r\n    })\r\n    .then(data => {\r\n        board = data.board;\r\n        winner = data.ganador || null;\r\n        xIsNext = !xIsNext;\r\n    })\r\n    .catch(error => {\r\n        console.error(\"Error:\", error);\r\n    });\r\n}\r\n\r\nexport async function reloadBoard() {\r\n    console.log(gameId);\r\n    return fetch(`${API_BASE_URL}/actualizar/${gameId}`)\r\n    .then(async(response) => {\r\n        if (response.status === 404) {\r\n            const errorText = await response.text();\r\n            if (errorText === \"Partida terminada por el host\") {\r\n                alert(errorText);\r\n                gameId = null;\r\n                playerId = null;\r\n                board = Array(9).fill(null);\r\n                winner = null;\r\n\r\n                outputGameId.textContent = \"\";\r\n            }\r\n            throw new Error(errorText);\r\n        } else {\r\n            return response.json();\r\n        }\r\n    })\r\n    .then(data => {\r\n        board = data.board;\r\n        winner = data.ganador || null;\r\n    })\r\n    .catch(error => console.error(\"Error:\", error));\r\n}\r\n\r\nexport async function leaveGame() {\r\n    return fetch(`${API_BASE_URL}/delete/${gameId}/${playerId}`, {\r\n        method: \"DELETE\",\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            gameId = null;\r\n            playerId = null;\r\n            board = Array(9).fill(null);\r\n            winner = null;\r\n            inGame = false;\r\n\r\n            outputGameId.textContent = \"\";\r\n        })\r\n        .catch(error => {\r\n            console.error(`Error: ${error}`);\r\n        });\r\n}\r\n\r\nexport async function resetGame() {\r\n    return fetch(`${API_BASE_URL}/reset/${gameId}`, {\r\n        method: \"PUT\",\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            board = Array(9).fill(null); // Reiniciar el tablero\r\n            winner = null;\r\n        })\r\n        .catch(error => {\r\n            console.error(`Error: ${error}`);\r\n        });\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}